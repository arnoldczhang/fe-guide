(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["test"],{

/***/ "NWL3":
/*!******************************!*\
  !*** ./src/test/src/test.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// process.binding引用built-in模块\n// const buffer = process.binding('buffer');\n// const buffer2 = require('buffer');\n\n\n// let a = {x:1, y:2, z:3};\n\n// let b = {};\n// b.x = 1;\n// b.y = 2;\n// b.z = 3;\n\n// console.log(\"a is\", a);\n// console.log(\"b is\", b);\n// console.log(\"a and b have same map:\", %HaveSameMap(a, b));\n\n// let c = Object.assign({}, {x:1, y:2, z:3});\n// let d = Object.assign({}, c);\n// console.log(\"c is\", c);\n// console.log(\"d is\", d);\n// console.log(\"c and d have same map:\", %HaveSameMap(c, d)); // true\n\n\n// console.log(process.cwd());\n\n\n// const { matches } = require('z');\n\n// const result = matches(1)(\n//   (x = 2)      => console.log('number 2 is the best!!!'),\n//   (x = Date)   => console.log('blaa.. dates are awful!'),\n//   (x = Number) => console.log(`number ${x} is not that good`),\n// );\n\n\n// const babel = require(\"babel-core\");\n// const code = `\n//   var obj = {\n//     breadthTraversal() {\n//       if (!this.root) return null\n//       let q = new Queue()\n//       // 将根节点入队\n//       q.enQueue(this.root)\n//       // 循环判断队列是否为空，为空\n//       // 代表树遍历完毕\n//       while (!q.isEmpty()) {\n//         // 将队首出队，判断是否有左右子树\n//         // 有的话，就先左后右入队\n//         let n = q.deQueue()\n//         console.log(n.value)\n//         if (n.left) q.enQueue(n.left)\n//         if (n.right) q.enQueue(n.right)\n//       }\n//     }\n//   }\n// `;\n// console.log(babel.transform(code).code);\n\n\n// const http = require('http');\n\n// http.createServer(function(req, res){//回调函数\n//   console.log(req.httpVersion);\n//   console.log(req.headers);\n//   console.log(req.method);\n//   console.log(req.url);\n//   console.log(req.trailers);\n//   console.log(req.complete);\n//   res.writeHead(200,{'Content-Type':'text/javascript'});\n//   res.end(``);\n// }).listen(8000);\n\n// demo1\n// let input = {};\n// let validator = {\n//   set(target, key, value) {\n\n//   },\n//   get(target, key, receiver) {\n//     let copyKey = key;\n//     const lambda = [];\n//     const reMap = {\n//       baseTrans: /^base(\\d+)To(\\d+)/i,\n//     };\n\n//     const reFunc = {\n//       baseTrans(\n//         methodName = '',\n//         parseNum = 10,\n//         toStringNum = 10,\n//         baseInput = 0,\n//       ) {\n//         if (toStringNum > 36 || parseNum > 36 || toStringNum < 2 || parseNum < 2) {\n//           throw new Error(`TypeError: baseTrans '${methodName}' is not a function`);\n//         }\n//         return parseInt(baseInput, parseNum || 10).toString(toStringNum || 10);\n//       },\n//     };\n\n//     while (copyKey.length) {\n//       const reKeyArray = Object.keys(reMap);\n//       for (let i = 0; i < reKeyArray.length; i += 1) {\n//         const reKey = reKeyArray[i];\n//         const re = reMap[reKey];\n//         const result = copyKey.match(re);\n//         if (result) {\n//           lambda.push(reFunc[reKey].bind(this, ...result));\n//           copyKey = copyKey.slice(result[0].length);\n//           break;\n//         }\n//       }\n//       copyKey = '';\n//     }\n//     return val => lambda.reduce((result, func) => func(result), val);\n//   },\n// };\n\n// // demo2\n// input = function sum(...args) {\n//   return args.reduce((a, b) => a + b, 0);\n// };\n// validator = {\n//   apply(target, thisArg, args) {\n//     console.log(target, thisArg, args);\n//   },\n// };\n\n// window.proxy = new Proxy(input, validator);\n\n// const recast = require('recast');\n\n// const code =\n//   `\n//   function add(a, b) {\n//     return a +\n//       // 有什么奇怪的东西混进来了\n//       b;\n//   }\n//   `;\n// const ast = recast.parse(code);\n\n// console.log(ast)\n\n\n// const async_hooks = require('async_hooks');\n\n// async_hooks.createHook({\n//   init(asyncId) {\n//     print({ type: 'init', msg: asyncId });\n//   },\n// }).enable();\n\n\n// function exampleFunction() {\n//     return 3;\n//     eval('');\n// }\n\n// function printStatus(fn) {\n//     switch(%GetOptimizationStatus(fn)) {\n//         case 1: console.log(\"Function is optimized\"); break;\n//         case 2: console.log(\"Function is not optimized\"); break;\n//         case 3: console.log(\"Function is always optimized\"); break;\n//         case 4: console.log(\"Function is never optimized\"); break;\n//         case 6: console.log(\"Function is maybe deoptimized\"); break;\n//         case 7: console.log(\"Function is optimized by TurboFan\"); break;\n//         default: console.log(\"Unknown optimization status\"); break;\n//     }\n// }\n\n// //Fill type-info\n// exampleFunction();\n// // 2 calls are needed to go from uninitialized -> pre-monomorphic -> monomorphic\n// exampleFunction();\n\n// %OptimizeFunctionOnNextCall(exampleFunction);\n// //The next call\n// exampleFunction();\n\n// //Check\n// printStatus(exampleFunction);\n\nvar CryptoJS = __webpack_require__(/*! crypto-js */ \"NFKh\");\nvar msg = CryptoJS.SHA256(\"Message Part 1\");\nconsole.log(msg);\n\n//# sourceURL=webpack:///./src/test/src/test.js?");

/***/ })

},[["NWL3","runtime","npm.crypto-js"]]]);