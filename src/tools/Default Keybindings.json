// Override key bindings by placing them into your key bindings file.
[
{ "key": "escape escape",         "command": "workbench.action.exitZenMode",
                                     "when": "inZenMode" },
{ "key": "shift+escape",          "command": "closeReferenceSearchEditor",
                                     "when": "inReferenceSearchEditor && !config.editor.stablePeek" },
{ "key": "escape",                "command": "closeReferenceSearchEditor",
                                     "when": "inReferenceSearchEditor && !config.editor.stablePeek" },
{ "key": "shift+escape",          "command": "cancelSelection",
                                     "when": "editorHasSelection && textInputFocus" },
{ "key": "escape",                "command": "cancelSelection",
                                     "when": "editorHasSelection && textInputFocus" },
{ "key": "cmd+down",              "command": "cursorBottom",
                                     "when": "textInputFocus" },
{ "key": "shift+cmd+down",        "command": "cursorBottomSelect",
                                     "when": "textInputFocus" },
{ "key": "shift+alt+cmd+down",    "command": "cursorColumnSelectDown",
                                     "when": "textInputFocus" },
{ "key": "shift+alt+cmd+left",    "command": "cursorColumnSelectLeft",
                                     "when": "textInputFocus" },
{ "key": "shift+alt+cmd+pagedown", "command": "cursorColumnSelectPageDown",
                                     "when": "textInputFocus" },
{ "key": "shift+alt+cmd+pageup",  "command": "cursorColumnSelectPageUp",
                                     "when": "textInputFocus" },
{ "key": "shift+alt+cmd+right",   "command": "cursorColumnSelectRight",
                                     "when": "textInputFocus" },
{ "key": "shift+alt+cmd+up",      "command": "cursorColumnSelectUp",
                                     "when": "textInputFocus" },
{ "key": "ctrl+n",                "command": "cursorDown",
                                     "when": "textInputFocus" },
{ "key": "down",                  "command": "cursorDown",
                                     "when": "textInputFocus" },
{ "key": "shift+down",            "command": "cursorDownSelect",
                                     "when": "textInputFocus" },
{ "key": "cmd+right",             "command": "cursorEnd",
                                     "when": "textInputFocus" },
{ "key": "end",                   "command": "cursorEnd",
                                     "when": "textInputFocus" },
{ "key": "shift+cmd+right",       "command": "cursorEndSelect",
                                     "when": "textInputFocus" },
{ "key": "shift+end",             "command": "cursorEndSelect",
                                     "when": "textInputFocus" },
{ "key": "cmd+left",              "command": "cursorHome",
                                     "when": "textInputFocus" },
{ "key": "home",                  "command": "cursorHome",
                                     "when": "textInputFocus" },
{ "key": "shift+cmd+left",        "command": "cursorHomeSelect",
                                     "when": "textInputFocus" },
{ "key": "shift+home",            "command": "cursorHomeSelect",
                                     "when": "textInputFocus" },
{ "key": "ctrl+b",                "command": "cursorLeft",
                                     "when": "textInputFocus" },
{ "key": "left",                  "command": "cursorLeft",
                                     "when": "textInputFocus" },
{ "key": "shift+left",            "command": "cursorLeftSelect",
                                     "when": "textInputFocus" },
{ "key": "ctrl+e",                "command": "cursorLineEnd",
                                     "when": "textInputFocus" },
{ "key": "ctrl+a",                "command": "cursorLineStart",
                                     "when": "textInputFocus" },
{ "key": "pagedown",              "command": "cursorPageDown",
                                     "when": "textInputFocus" },
{ "key": "shift+pagedown",        "command": "cursorPageDownSelect",
                                     "when": "textInputFocus" },
{ "key": "pageup",                "command": "cursorPageUp",
                                     "when": "textInputFocus" },
{ "key": "shift+pageup",          "command": "cursorPageUpSelect",
                                     "when": "textInputFocus" },
{ "key": "ctrl+f",                "command": "cursorRight",
                                     "when": "textInputFocus" },
{ "key": "right",                 "command": "cursorRight",
                                     "when": "textInputFocus" },
{ "key": "shift+right",           "command": "cursorRightSelect",
                                     "when": "textInputFocus" },
{ "key": "cmd+up",                "command": "cursorTop",
                                     "when": "textInputFocus" },
{ "key": "shift+cmd+up",          "command": "cursorTopSelect",
                                     "when": "textInputFocus" },
{ "key": "ctrl+p",                "command": "cursorUp",
                                     "when": "textInputFocus" },
{ "key": "up",                    "command": "cursorUp",
                                     "when": "textInputFocus" },
{ "key": "shift+up",              "command": "cursorUpSelect",
                                     "when": "textInputFocus" },
{ "key": "ctrl+backspace",        "command": "deleteLeft",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "ctrl+h",                "command": "deleteLeft",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "shift+backspace",       "command": "deleteLeft",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "backspace",             "command": "deleteLeft",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "ctrl+delete",           "command": "deleteRight",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "ctrl+d",                "command": "deleteRight",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "delete",                "command": "deleteRight",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "cmd+a",                 "command": "editor.action.selectAll",
                                     "when": "textInputFocus" },
{ "key": "cmd+i",                 "command": "expandLineSelection",
                                     "when": "textInputFocus" },
{ "key": "ctrl+o",                "command": "lineBreakInsert",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "shift+tab",             "command": "outdent",
                                     "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus" },
{ "key": "shift+cmd+z",           "command": "redo",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "ctrl+pagedown",         "command": "scrollLineDown",
                                     "when": "textInputFocus" },
{ "key": "ctrl+pageup",           "command": "scrollLineUp",
                                     "when": "textInputFocus" },
{ "key": "cmd+pagedown",          "command": "scrollPageDown",
                                     "when": "textInputFocus" },
{ "key": "cmd+pageup",            "command": "scrollPageUp",
                                     "when": "textInputFocus" },
{ "key": "tab",                   "command": "tab",
                                     "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus" },
{ "key": "cmd+z",                 "command": "undo",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "shift+escape",          "command": "removeSecondaryCursors",
                                     "when": "editorHasMultipleSelections && textInputFocus" },
{ "key": "escape",                "command": "removeSecondaryCursors",
                                     "when": "editorHasMultipleSelections && textInputFocus" },
{ "key": "right",                 "command": "repl.action.acceptSuggestion",
                                     "when": "inDebugRepl && suggestWidgetVisible && textInputFocus" },
{ "key": "cmd+f",                 "command": "actions.find" },
{ "key": "cmd+e",                 "command": "actions.findWithSelection" },
{ "key": "enter",                 "command": "breakpointWidget.action.acceptInput",
                                     "when": "breakpointWidgetVisible && inBreakpointWidget" },
{ "key": "shift+escape",          "command": "closeBreakpointWidget",
                                     "when": "breakpointWidgetVisible && textInputFocus" },
{ "key": "escape",                "command": "closeBreakpointWidget",
                                     "when": "breakpointWidgetVisible && textInputFocus" },
{ "key": "shift+escape",          "command": "closeReviewPanel",
                                     "when": "reviewPanelVisible" },
{ "key": "escape",                "command": "closeReviewPanel",
                                     "when": "reviewPanelVisible" },
{ "key": "cmd+u",                 "command": "cursorUndo",
                                     "when": "textInputFocus" },
{ "key": "alt+right",             "command": "cursorWordEndRight",
                                     "when": "textInputFocus" },
{ "key": "shift+alt+right",       "command": "cursorWordEndRightSelect",
                                     "when": "textInputFocus" },
{ "key": "ctrl+alt+left",         "command": "cursorWordPartLeft",
                                     "when": "textInputFocus" },
{ "key": "ctrl+shift+alt+left",   "command": "cursorWordPartLeftSelect",
                                     "when": "textInputFocus" },
{ "key": "ctrl+alt+right",        "command": "cursorWordPartRight",
                                     "when": "textInputFocus" },
{ "key": "ctrl+shift+alt+right",  "command": "cursorWordPartRightSelect",
                                     "when": "textInputFocus" },
{ "key": "alt+left",              "command": "cursorWordStartLeft",
                                     "when": "textInputFocus" },
{ "key": "shift+alt+left",        "command": "cursorWordStartLeftSelect",
                                     "when": "textInputFocus" },
{ "key": "cmd+backspace",         "command": "deleteAllLeft",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "cmd+delete",            "command": "deleteAllRight",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "ctrl+k",                "command": "deleteAllRight",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "alt+backspace",         "command": "deleteWordLeft",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "ctrl+alt+backspace",    "command": "deleteWordPartLeft",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "ctrl+alt+delete",       "command": "deleteWordPartRight",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "alt+delete",            "command": "deleteWordRight",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "cmd+k cmd+c",           "command": "editor.action.addCommentLine",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "cmd+d",                 "command": "editor.action.addSelectionToNextFindMatch",
                                     "when": "editorFocus" },
{ "key": "shift+alt+a",           "command": "editor.action.blockComment",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "cmd+f2",                "command": "editor.action.changeAll",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "cmd+c",                 "command": "editor.action.clipboardCopyAction",
                                     "when": "textInputFocus" },
{ "key": "cmd+x",                 "command": "editor.action.clipboardCutAction",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "cmd+v",                 "command": "editor.action.clipboardPasteAction",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "cmd+/",                 "command": "editor.action.commentLine",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "shift+alt+down",        "command": "editor.action.copyLinesDownAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "shift+alt+up",          "command": "editor.action.copyLinesUpAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "cmd+k cmd+k",           "command": "editor.action.defineKeybinding",
                                     "when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'" },
{ "key": "shift+cmd+k",           "command": "editor.action.deleteLines",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "f7",                    "command": "editor.action.diffReview.next",
                                     "when": "isInDiffEditor" },
{ "key": "shift+f7",              "command": "editor.action.diffReview.prev",
                                     "when": "isInDiffEditor" },
{ "key": "alt+f3",                "command": "editor.action.dirtydiff.next",
                                     "when": "editorTextFocus" },
{ "key": "shift+alt+f3",          "command": "editor.action.dirtydiff.previous",
                                     "when": "editorTextFocus" },
{ "key": "cmd+f",                 "command": "editor.action.extensioneditor.showfind",
                                     "when": "activeEditor == 'workbench.editor.extension'" },
{ "key": "shift+alt+f",           "command": "editor.action.formatDocument",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "cmd+k cmd+f",           "command": "editor.action.formatSelection",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "cmd+f12",               "command": "editor.action.goToImplementation",
                                     "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor" },
{ "key": "shift+cmd+.",           "command": "editor.action.inPlaceReplace.down",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "shift+cmd+,",           "command": "editor.action.inPlaceReplace.up",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "cmd+]",                 "command": "editor.action.indentLines",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "alt+cmd+up",            "command": "editor.action.insertCursorAbove",
                                     "when": "editorTextFocus" },
{ "key": "shift+alt+i",           "command": "editor.action.insertCursorAtEndOfEachLineSelected",
                                     "when": "editorTextFocus" },
{ "key": "alt+cmd+down",          "command": "editor.action.insertCursorBelow",
                                     "when": "editorTextFocus" },
{ "key": "cmd+enter",             "command": "editor.action.insertLineAfter",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "shift+cmd+enter",       "command": "editor.action.insertLineBefore",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "ctrl+j",                "command": "editor.action.joinLines",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "shift+cmd+\\",          "command": "editor.action.jumpToBracket",
                                     "when": "editorTextFocus" },
{ "key": "f8",                    "command": "editor.action.marker.nextInFiles",
                                     "when": "editorFocus && !editorReadonly" },
{ "key": "shift+f8",              "command": "editor.action.marker.prevInFiles",
                                     "when": "editorFocus && !editorReadonly" },
{ "key": "alt+down",              "command": "editor.action.moveLinesDownAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "alt+up",                "command": "editor.action.moveLinesUpAction",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "cmd+k cmd+d",           "command": "editor.action.moveSelectionToNextFindMatch",
                                     "when": "editorFocus" },
{ "key": "f3",                    "command": "editor.action.nextMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "cmd+g",                 "command": "editor.action.nextMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "cmd+f3",                "command": "editor.action.nextSelectionMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "shift+alt+o",           "command": "editor.action.organizeImports",
                                     "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/" },
{ "key": "cmd+[",                 "command": "editor.action.outdentLines",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "alt+f12",               "command": "editor.action.peekDefinition",
                                     "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
{ "key": "shift+cmd+f12",         "command": "editor.action.peekImplementation",
                                     "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor" },
{ "key": "shift+f3",              "command": "editor.action.previousMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "shift+cmd+g",           "command": "editor.action.previousMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "shift+cmd+f3",          "command": "editor.action.previousSelectionMatchFindAction",
                                     "when": "editorFocus" },
{ "key": "cmd+.",                 "command": "editor.action.quickFix",
                                     "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },
{ "key": "ctrl+shift+r",          "command": "editor.action.refactor",
                                     "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },
{ "key": "shift+f12",             "command": "editor.action.referenceSearch.trigger",
                                     "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor" },
{ "key": "cmd+k cmd+u",           "command": "editor.action.removeCommentLine",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "f2",                    "command": "editor.action.rename",
                                     "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly" },
{ "key": "f12",                   "command": "editor.action.revealDefinition",
                                     "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
{ "key": "cmd+k f12",             "command": "editor.action.revealDefinitionAside",
                                     "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor" },
{ "key": "shift+cmd+l",           "command": "editor.action.selectHighlights",
                                     "when": "editorFocus" },
{ "key": "alt+f1",                "command": "editor.action.showAccessibilityHelp",
                                     "when": "editorFocus" },
{ "key": "shift+f10",             "command": "editor.action.showContextMenu",
                                     "when": "textInputFocus" },
{ "key": "cmd+k cmd+i",           "command": "editor.action.showHover",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+cmd+right",  "command": "editor.action.smartSelect.grow",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+cmd+left",   "command": "editor.action.smartSelect.shrink",
                                     "when": "editorTextFocus" },
{ "key": "alt+cmd+f",             "command": "editor.action.startFindReplaceAction" },
{ "key": "ctrl+shift+m",          "command": "editor.action.toggleTabFocusMode" },
{ "key": "alt+z",                 "command": "editor.action.toggleWordWrap" },
{ "key": "ctrl+t",                "command": "editor.action.transposeLetters",
                                     "when": "textInputFocus && !editorReadonly" },
{ "key": "shift+cmd+space",       "command": "editor.action.triggerParameterHints",
                                     "when": "editorHasSignatureHelpProvider && editorTextFocus" },
{ "key": "ctrl+space",            "command": "editor.action.triggerSuggest",
                                     "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly" },
{ "key": "cmd+k cmd+x",           "command": "editor.action.trimTrailingWhitespace",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "escape",                "command": "editor.action.webvieweditor.hideFind",
                                     "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'" },
{ "key": "escape",                "command": "editor.action.webvieweditor.hideFind",
                                     "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'" },
{ "key": "cmd+a",                 "command": "editor.action.webvieweditor.selectAll",
                                     "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'" },
{ "key": "cmd+a",                 "command": "editor.action.webvieweditor.selectAll",
                                     "when": "!editorFocus && !inputFocus && activeEditor == 'workbench.editor.htmlPreviewPart'" },
{ "key": "cmd+f",                 "command": "editor.action.webvieweditor.showFind",
                                     "when": "!editorFocus && activeEditor == 'workbench.editor.htmlPreviewPart'" },
{ "key": "cmd+f",                 "command": "editor.action.webvieweditor.showFind",
                                     "when": "!editorFocus && activeEditor == 'WebviewEditor'" },
{ "key": "f7",                    "command": "editor.action.wordHighlight.next",
                                     "when": "editorTextFocus && hasWordHighlights" },
{ "key": "shift+f7",              "command": "editor.action.wordHighlight.prev",
                                     "when": "editorTextFocus && hasWordHighlights" },
{ "key": "cmd+k cmd+i",           "command": "editor.debug.action.showDebugHover",
                                     "when": "editorTextFocus && inDebugMode" },
{ "key": "f9",                    "command": "editor.debug.action.toggleBreakpoint",
                                     "when": "editorTextFocus" },
{ "key": "tab",                   "command": "editor.emmet.action.expandAbbreviation",
                                     "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus" },
{ "key": "alt+cmd+[",             "command": "editor.fold",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+0",           "command": "editor.foldAll",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+/",           "command": "editor.foldAllBlockComments",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+8",           "command": "editor.foldAllMarkerRegions",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+1",           "command": "editor.foldLevel1",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+2",           "command": "editor.foldLevel2",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+3",           "command": "editor.foldLevel3",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+4",           "command": "editor.foldLevel4",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+5",           "command": "editor.foldLevel5",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+6",           "command": "editor.foldLevel6",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+7",           "command": "editor.foldLevel7",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+[",           "command": "editor.foldRecursively",
                                     "when": "editorTextFocus" },
{ "key": "alt+cmd+]",             "command": "editor.unfold",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+j",           "command": "editor.unfoldAll",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+9",           "command": "editor.unfoldAllMarkerRegions",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+]",           "command": "editor.unfoldRecursively",
                                     "when": "editorTextFocus" },
{ "key": "tab",                   "command": "insertSnippet",
                                     "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode" },
{ "key": "ctrl+enter",            "command": "openReferenceToSide",
                                     "when": "referenceSearchTreeFocused && referenceSearchVisible" },
{ "key": "enter",                 "command": "repl.action.acceptInput",
                                     "when": "inDebugRepl && textInputFocus" },
{ "key": "escape",                "command": "settings.action.clearSearchResults",
                                     "when": "inSettingsSearch" },
{ "key": "cmd+.",                 "command": "settings.action.editFocusedSetting",
                                     "when": "inSettingsSearch" },
{ "key": "enter",                 "command": "settings.action.focusNextSetting",
                                     "when": "inSettingsSearch" },
{ "key": "shift+enter",           "command": "settings.action.focusPreviousSetting",
                                     "when": "inSettingsSearch" },
{ "key": "down",                  "command": "settings.action.focusSettingsFile",
                                     "when": "inSettingsSearch && !suggestWidgetVisible" },
{ "key": "cmd+f",                 "command": "settings.action.search",
                                     "when": "inSettingsEditor" },
{ "key": "alt+f5",                "command": "workbench.action.editor.nextChange",
                                     "when": "editorTextFocus" },
{ "key": "shift+alt+f5",          "command": "workbench.action.editor.previousChange",
                                     "when": "editorTextFocus" },
{ "key": "shift+escape",          "command": "closeFindWidget",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "escape",                "command": "closeFindWidget",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "alt+cmd+enter",         "command": "editor.action.replaceAll",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "shift+cmd+1",           "command": "editor.action.replaceOne",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "alt+enter",             "command": "editor.action.selectAllMatches",
                                     "when": "editorFocus && findWidgetVisible" },
{ "key": "alt+cmd+c",             "command": "toggleFindCaseSensitive",
                                     "when": "editorFocus" },
{ "key": "alt+cmd+l",             "command": "toggleFindInSelection",
                                     "when": "editorFocus" },
{ "key": "alt+cmd+r",             "command": "toggleFindRegex",
                                     "when": "editorFocus" },
{ "key": "alt+cmd+w",             "command": "toggleFindWholeWord",
                                     "when": "editorFocus" },
{ "key": "tab",                   "command": "jumpToNextSnippetPlaceholder",
                                     "when": "editorTextFocus && hasNextTabstop && inSnippetMode" },
{ "key": "shift+tab",             "command": "jumpToPrevSnippetPlaceholder",
                                     "when": "editorTextFocus && hasPrevTabstop && inSnippetMode" },
{ "key": "escape",                "command": "leaveEditorMessage",
                                     "when": "messageVisible" },
{ "key": "shift+escape",          "command": "leaveSnippet",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "escape",                "command": "leaveSnippet",
                                     "when": "editorTextFocus && inSnippetMode" },
{ "key": "shift+escape",          "command": "closeDirtyDiff",
                                     "when": "dirtyDiffVisible" },
{ "key": "escape",                "command": "closeDirtyDiff",
                                     "when": "dirtyDiffVisible" },
{ "key": "shift+escape",          "command": "closeMarkersNavigation",
                                     "when": "editorFocus && markersNavigationVisible" },
{ "key": "escape",                "command": "closeMarkersNavigation",
                                     "when": "editorFocus && markersNavigationVisible" },
{ "key": "f4",                    "command": "goToNextReferenceFromEmbeddedEditor",
                                     "when": "inReferenceSearchEditor" },
{ "key": "shift+f4",              "command": "goToPreviousReferenceFromEmbeddedEditor",
                                     "when": "inReferenceSearchEditor" },
{ "key": "shift+escape",          "command": "closeParameterHints",
                                     "when": "editorTextFocus && parameterHintsVisible" },
{ "key": "escape",                "command": "closeParameterHints",
                                     "when": "editorTextFocus && parameterHintsVisible" },
{ "key": "ctrl+n",                "command": "showNextParameterHint",
                                     "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
{ "key": "alt+down",              "command": "showNextParameterHint",
                                     "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
{ "key": "down",                  "command": "showNextParameterHint",
                                     "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
{ "key": "ctrl+p",                "command": "showPrevParameterHint",
                                     "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
{ "key": "alt+up",                "command": "showPrevParameterHint",
                                     "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
{ "key": "up",                    "command": "showPrevParameterHint",
                                     "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible" },
{ "key": "tab",                   "command": "acceptSelectedSuggestion",
                                     "when": "suggestWidgetVisible && textInputFocus" },
{ "key": "enter",                 "command": "acceptSelectedSuggestionOnEnter",
                                     "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus" },
{ "key": "shift+escape",          "command": "hideSuggestWidget",
                                     "when": "suggestWidgetVisible && textInputFocus" },
{ "key": "escape",                "command": "hideSuggestWidget",
                                     "when": "suggestWidgetVisible && textInputFocus" },
{ "key": "tab",                   "command": "insertBestCompletion",
                                     "when": "atEndOfWord && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'" },
{ "key": "tab",                   "command": "insertNextSuggestion",
                                     "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'" },
{ "key": "shift+tab",             "command": "insertPrevSuggestion",
                                     "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'" },
{ "key": "cmd+pagedown",          "command": "selectNextPageSuggestion",
                                     "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
{ "key": "pagedown",              "command": "selectNextPageSuggestion",
                                     "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
{ "key": "ctrl+n",                "command": "selectNextSuggestion",
                                     "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
{ "key": "cmd+down",              "command": "selectNextSuggestion",
                                     "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
{ "key": "down",                  "command": "selectNextSuggestion",
                                     "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
{ "key": "cmd+pageup",            "command": "selectPrevPageSuggestion",
                                     "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
{ "key": "pageup",                "command": "selectPrevPageSuggestion",
                                     "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
{ "key": "ctrl+p",                "command": "selectPrevSuggestion",
                                     "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
{ "key": "cmd+up",                "command": "selectPrevSuggestion",
                                     "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
{ "key": "up",                    "command": "selectPrevSuggestion",
                                     "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus" },
{ "key": "ctrl+space",            "command": "toggleSuggestionDetails",
                                     "when": "suggestWidgetVisible && textInputFocus" },
{ "key": "ctrl+alt+space",        "command": "toggleSuggestionFocus",
                                     "when": "suggestWidgetVisible && textInputFocus" },
{ "key": "enter",                 "command": "acceptRenameInput",
                                     "when": "editorFocus && renameInputVisible" },
{ "key": "shift+escape",          "command": "cancelRenameInput",
                                     "when": "editorFocus && renameInputVisible" },
{ "key": "escape",                "command": "cancelRenameInput",
                                     "when": "editorFocus && renameInputVisible" },
{ "key": "shift+cmd+;",           "command": "breadcrumbs.focus",
                                     "when": "breadcrumbsPossible" },
{ "key": "shift+cmd+.",           "command": "breadcrumbs.focusAndSelect",
                                     "when": "breadcrumbsPossible" },
{ "key": "alt+right",             "command": "breadcrumbs.focusNext",
                                     "when": "breadcrumbsActive && breadcrumbsVisible" },
{ "key": "right",                 "command": "breadcrumbs.focusNext",
                                     "when": "breadcrumbsActive && breadcrumbsVisible" },
{ "key": "alt+left",              "command": "breadcrumbs.focusPrevious",
                                     "when": "breadcrumbsActive && breadcrumbsVisible" },
{ "key": "left",                  "command": "breadcrumbs.focusPrevious",
                                     "when": "breadcrumbsActive && breadcrumbsVisible" },
{ "key": "cmd+enter",             "command": "breadcrumbs.revealFocused",
                                     "when": "breadcrumbsActive && breadcrumbsVisible" },
{ "key": "space",                 "command": "breadcrumbs.revealFocused",
                                     "when": "breadcrumbsActive && breadcrumbsVisible" },
{ "key": "cmd+enter",             "command": "breadcrumbs.revealFocusedFromTreeAside",
                                     "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus" },
{ "key": "down",                  "command": "breadcrumbs.selectFocused",
                                     "when": "breadcrumbsActive && breadcrumbsVisible" },
{ "key": "enter",                 "command": "breadcrumbs.selectFocused",
                                     "when": "breadcrumbsActive && breadcrumbsVisible" },
{ "key": "shift+cmd+.",           "command": "breadcrumbs.toggleToOn",
                                     "when": "!config.breadcrumbs.enabled" },
{ "key": "shift+escape",          "command": "closeAccessibilityHelp",
                                     "when": "accessibilityHelpWidgetVisible && editorFocus" },
{ "key": "escape",                "command": "closeAccessibilityHelp",
                                     "when": "accessibilityHelpWidgetVisible && editorFocus" },
{ "key": "escape",                "command": "closeReplaceInFilesWidget",
                                     "when": "replaceInputBoxFocus && searchViewletVisible" },
{ "key": "alt+cmd+c",             "command": "copyFilePath",
                                     "when": "!editorFocus" },
{ "key": "shift+alt+cmd+c",       "command": "copyRelativeFilePath",
                                     "when": "!editorFocus" },
{ "key": "alt+enter",             "command": "debug.openBreakpointToSide",
                                     "when": "breakpointsFocused" },
{ "key": "cmd+enter",             "command": "debug.openBreakpointToSide",
                                     "when": "breakpointsFocused" },
{ "key": "cmd+backspace",         "command": "debug.removeBreakpoint",
                                     "when": "breakpointsFocused && !breakpointSelected" },
{ "key": "cmd+backspace",         "command": "debug.removeWatchExpression",
                                     "when": "watchExpressionsFocused && !expressionSelected" },
{ "key": "shift+f9",              "command": "editor.debug.action.toggleInlineBreakpoint",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+enter",            "command": "explorer.openToSide",
                                     "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus" },
{ "key": "alt+down",              "command": "history.showNext",
                                     "when": "historyNavigationEnabled && historyNavigationWidget" },
{ "key": "down",                  "command": "history.showNext",
                                     "when": "historyNavigationEnabled && historyNavigationWidget" },
{ "key": "alt+up",                "command": "history.showPrevious",
                                     "when": "historyNavigationEnabled && historyNavigationWidget" },
{ "key": "up",                    "command": "history.showPrevious",
                                     "when": "historyNavigationEnabled && historyNavigationWidget" },
{ "key": "escape",                "command": "keybindings.editor.clearSearchResults",
                                     "when": "inKeybindings && inKeybindingsSearch" },
{ "key": "cmd+c",                 "command": "keybindings.editor.copyKeybindingEntry",
                                     "when": "inKeybindings && keybindingFocus" },
{ "key": "cmd+k cmd+k",           "command": "keybindings.editor.defineKeybinding",
                                     "when": "inKeybindings && keybindingFocus" },
{ "key": "down",                  "command": "keybindings.editor.focusKeybindings",
                                     "when": "inKeybindings && inKeybindingsSearch" },
{ "key": "alt+cmd+k",             "command": "keybindings.editor.recordSearchKeys",
                                     "when": "inKeybindings && inKeybindingsSearch" },
{ "key": "cmd+k cmd+backspace",   "command": "keybindings.editor.removeKeybinding",
                                     "when": "inKeybindings && keybindingFocus" },
{ "key": "cmd+f",                 "command": "keybindings.editor.searchKeybindings",
                                     "when": "inKeybindings && !inKeybindingsSearch" },
{ "key": "alt+cmd+p",             "command": "keybindings.editor.toggleSortByPrecedence",
                                     "when": "inKeybindings" },
{ "key": "escape",                "command": "list.clear",
                                     "when": "listFocus && listHasSelectionOrFocus && !inputFocus" },
{ "key": "cmd+up",                "command": "list.collapse",
                                     "when": "listFocus && !inputFocus" },
{ "key": "left",                  "command": "list.collapse",
                                     "when": "listFocus && !inputFocus" },
{ "key": "right",                 "command": "list.expand",
                                     "when": "listFocus && !inputFocus" },
{ "key": "shift+down",            "command": "list.expandSelectionDown",
                                     "when": "listFocus && listSupportsMultiselect && !inputFocus" },
{ "key": "shift+up",              "command": "list.expandSelectionUp",
                                     "when": "listFocus && listSupportsMultiselect && !inputFocus" },
{ "key": "ctrl+n",                "command": "list.focusDown",
                                     "when": "listFocus && !inputFocus" },
{ "key": "down",                  "command": "list.focusDown",
                                     "when": "listFocus && !inputFocus" },
{ "key": "home",                  "command": "list.focusFirst",
                                     "when": "listFocus && !inputFocus" },
{ "key": "end",                   "command": "list.focusLast",
                                     "when": "listFocus && !inputFocus" },
{ "key": "pagedown",              "command": "list.focusPageDown",
                                     "when": "listFocus && !inputFocus" },
{ "key": "pageup",                "command": "list.focusPageUp",
                                     "when": "listFocus && !inputFocus" },
{ "key": "ctrl+p",                "command": "list.focusUp",
                                     "when": "listFocus && !inputFocus" },
{ "key": "up",                    "command": "list.focusUp",
                                     "when": "listFocus && !inputFocus" },
{ "key": "cmd+down",              "command": "list.select",
                                     "when": "listFocus && !inputFocus" },
{ "key": "enter",                 "command": "list.select",
                                     "when": "listFocus && !inputFocus" },
{ "key": "cmd+a",                 "command": "list.selectAll",
                                     "when": "listFocus && listSupportsMultiselect && !inputFocus" },
{ "key": "space",                 "command": "list.toggleExpand",
                                     "when": "listFocus && !inputFocus" },
{ "key": "cmd+backspace",         "command": "notification.clear",
                                     "when": "notificationFocus" },
{ "key": "left",                  "command": "notification.collapse",
                                     "when": "notificationFocus" },
{ "key": "right",                 "command": "notification.expand",
                                     "when": "notificationFocus" },
{ "key": "enter",                 "command": "notification.toggle",
                                     "when": "notificationFocus" },
{ "key": "space",                 "command": "notification.toggle",
                                     "when": "notificationFocus" },
{ "key": "home",                  "command": "notifications.focusFirstToast",
                                     "when": "notificationFocus && notificationToastsVisible" },
{ "key": "pageup",                "command": "notifications.focusFirstToast",
                                     "when": "notificationFocus && notificationToastsVisible" },
{ "key": "end",                   "command": "notifications.focusLastToast",
                                     "when": "notificationFocus && notificationToastsVisible" },
{ "key": "pagedown",              "command": "notifications.focusLastToast",
                                     "when": "notificationFocus && notificationToastsVisible" },
{ "key": "down",                  "command": "notifications.focusNextToast",
                                     "when": "notificationFocus && notificationToastsVisible" },
{ "key": "up",                    "command": "notifications.focusPreviousToast",
                                     "when": "notificationFocus && notificationToastsVisible" },
{ "key": "down",                  "command": "outline.focusDownHighlighted",
                                     "when": "outlineFiltered && outlineFocused" },
{ "key": "up",                    "command": "outline.focusUpHighlighted",
                                     "when": "outlineFiltered && outlineFocused" },
{ "key": "ctrl+enter",            "command": "problems.action.openToSide",
                                     "when": "problemFocus" },
{ "key": "alt+cmd+r",             "command": "revealFileInOS",
                                     "when": "!editorFocus" },
{ "key": "cmd+enter",             "command": "scm.acceptInput",
                                     "when": "scmRepository" },
{ "key": "escape",                "command": "search.action.cancel",
                                     "when": "listFocus && searchViewletVisible && !inputFocus" },
{ "key": "cmd+c",                 "command": "search.action.copyMatch",
                                     "when": "fileMatchOrMatchFocus" },
{ "key": "alt+cmd+c",             "command": "search.action.copyPath",
                                     "when": "fileMatchOrFolderMatchFocus" },
{ "key": "f4",                    "command": "search.action.focusNextSearchResult",
                                     "when": "hasSearchResult" },
{ "key": "shift+f4",              "command": "search.action.focusPreviousSearchResult",
                                     "when": "hasSearchResult" },
{ "key": "cmd+up",                "command": "search.action.focusSearchFromResults",
                                     "when": "firstMatchFocus && searchViewletVisible" },
{ "key": "ctrl+enter",            "command": "search.action.openResultToSide",
                                     "when": "fileMatchOrMatchFocus && searchViewletVisible" },
{ "key": "cmd+backspace",         "command": "search.action.remove",
                                     "when": "fileMatchOrMatchFocus && searchViewletVisible" },
{ "key": "shift+cmd+1",           "command": "search.action.replace",
                                     "when": "matchFocus && replaceActive && searchViewletVisible" },
{ "key": "alt+cmd+enter",         "command": "search.action.replaceAll",
                                     "when": "replaceActive && searchViewletVisible && !findWidgetVisible" },
{ "key": "shift+cmd+enter",       "command": "search.action.replaceAllInFile",
                                     "when": "fileMatchFocus && replaceActive && searchViewletVisible" },
{ "key": "shift+cmd+1",           "command": "search.action.replaceAllInFile",
                                     "when": "fileMatchFocus && replaceActive && searchViewletVisible" },
{ "key": "shift+cmd+enter",       "command": "search.action.replaceAllInFolder",
                                     "when": "folderMatchFocus && replaceActive && searchViewletVisible" },
{ "key": "shift+cmd+1",           "command": "search.action.replaceAllInFolder",
                                     "when": "folderMatchFocus && replaceActive && searchViewletVisible" },
{ "key": "cmd+down",              "command": "search.focus.nextInputBox",
                                     "when": "inputBoxFocus && searchViewletVisible" },
{ "key": "cmd+up",                "command": "search.focus.previousInputBox",
                                     "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus" },
{ "key": "cmd+f",                 "command": "problems.action.focusFilter",
                                     "when": "problemsViewFocus" },
{ "key": "cmd+down",              "command": "problems.action.focusProblemsFromFilter",
                                     "when": "problemsFilterFocus" },
{ "key": "cmd+c",                 "command": "problems.action.copy",
                                     "when": "problemFocus" },
{ "key": "down",                  "command": "settings.action.focusSettingsFromSearch",
                                     "when": "inSettingsSearch && !suggestWidgetVisible" },
{ "key": "enter",                 "command": "settings.action.focusSettingsList",
                                     "when": "inSettingsEditor && settingsTocRowFocus" },
{ "key": "shift+f9",              "command": "settings.action.showContextMenu",
                                     "when": "inSettingsEditor" },
{ "key": "alt+cmd+c",             "command": "toggleSearchCaseSensitive",
                                     "when": "searchViewletFocus && searchViewletVisible && !fileMatchOrFolderMatchFocus" },
{ "key": "alt+cmd+r",             "command": "toggleSearchRegex",
                                     "when": "searchViewletFocus && searchViewletVisible" },
{ "key": "alt+cmd+w",             "command": "toggleSearchWholeWord",
                                     "when": "searchViewletFocus && searchViewletVisible" },
{ "key": "cmd+w",                 "command": "workbench.action.closeActiveEditor" },
{ "key": "cmd+k cmd+w",           "command": "workbench.action.closeAllEditors" },
{ "key": "cmd+k shift+cmd+w",     "command": "workbench.action.closeAllGroups" },
{ "key": "cmd+k w",               "command": "workbench.action.closeEditorsInGroup" },
{ "key": "cmd+k f",               "command": "workbench.action.closeFolder" },
{ "key": "cmd+w",                 "command": "workbench.action.closeGroup",
                                     "when": "activeEditorGroupEmpty && multipleEditorGroups" },
{ "key": "alt+cmd+t",             "command": "workbench.action.closeOtherEditors" },
{ "key": "shift+escape",          "command": "workbench.action.closeQuickOpen",
                                     "when": "inQuickOpen" },
{ "key": "escape",                "command": "workbench.action.closeQuickOpen",
                                     "when": "inQuickOpen" },
{ "key": "cmd+k u",               "command": "workbench.action.closeUnmodifiedEditors" },
{ "key": "cmd+w",                 "command": "workbench.action.closeWindow",
                                     "when": "!editorIsOpen && !multipleEditorGroups" },
{ "key": "shift+cmd+w",           "command": "workbench.action.closeWindow" },
{ "key": "alt+f5",                "command": "workbench.action.compareEditor.nextChange",
                                     "when": "textCompareEditorVisible" },
{ "key": "shift+alt+f5",          "command": "workbench.action.compareEditor.previousChange",
                                     "when": "textCompareEditorVisible" },
{ "key": "f5",                    "command": "workbench.action.debug.continue",
                                     "when": "inDebugMode" },
{ "key": "f6",                    "command": "workbench.action.debug.pause",
                                     "when": "inDebugMode" },
{ "key": "shift+cmd+f5",          "command": "workbench.action.debug.restart",
                                     "when": "inDebugMode" },
{ "key": "ctrl+f5",               "command": "workbench.action.debug.run",
                                     "when": "!inDebugMode" },
{ "key": "f5",                    "command": "workbench.action.debug.start",
                                     "when": "!inDebugMode" },
{ "key": "shift+f11",             "command": "workbench.action.debug.stepOut",
                                     "when": "inDebugMode" },
{ "key": "f10",                   "command": "workbench.action.debug.stepOver",
                                     "when": "inDebugMode" },
{ "key": "shift+f5",              "command": "workbench.action.debug.stop",
                                     "when": "inDebugMode" },
{ "key": "cmd+k m",               "command": "workbench.action.editor.changeLanguageMode" },
{ "key": "cmd+k p",               "command": "workbench.action.files.copyPathOfActiveFile" },
{ "key": "cmd+n",                 "command": "workbench.action.files.newUntitledFile" },
{ "key": "cmd+o",                 "command": "workbench.action.files.openFileFolder" },
{ "key": "cmd+k r",               "command": "workbench.action.files.revealActiveFileInWindows" },
{ "key": "cmd+s",                 "command": "workbench.action.files.save" },
{ "key": "alt+cmd+s",             "command": "workbench.action.files.saveAll" },
{ "key": "shift+cmd+s",           "command": "workbench.action.files.saveAs" },
{ "key": "cmd+k s",               "command": "workbench.action.files.saveWithoutFormatting" },
{ "key": "cmd+k o",               "command": "workbench.action.files.showOpenedFileInNewWindow" },
{ "key": "shift+cmd+f",           "command": "workbench.action.findInFiles" },
{ "key": "cmd+k cmd+up",          "command": "workbench.action.focusAboveGroup" },
{ "key": "cmd+k cmd+down",        "command": "workbench.action.focusBelowGroup" },
{ "key": "cmd+8",                 "command": "workbench.action.focusEighthEditorGroup" },
{ "key": "cmd+5",                 "command": "workbench.action.focusFifthEditorGroup" },
{ "key": "cmd+1",                 "command": "workbench.action.focusFirstEditorGroup" },
{ "key": "cmd+4",                 "command": "workbench.action.focusFourthEditorGroup" },
{ "key": "cmd+k cmd+left",        "command": "workbench.action.focusLeftGroup" },
{ "key": "cmd+k cmd+right",       "command": "workbench.action.focusRightGroup" },
{ "key": "cmd+2",                 "command": "workbench.action.focusSecondEditorGroup" },
{ "key": "cmd+7",                 "command": "workbench.action.focusSeventhEditorGroup" },
{ "key": "cmd+0",                 "command": "workbench.action.focusSideBar" },
{ "key": "cmd+6",                 "command": "workbench.action.focusSixthEditorGroup" },
{ "key": "cmd+3",                 "command": "workbench.action.focusThirdEditorGroup" },
{ "key": "ctrl+g",                "command": "workbench.action.gotoLine" },
{ "key": "shift+cmd+o",           "command": "workbench.action.gotoSymbol" },
{ "key": "escape",                "command": "workbench.action.hideInterfaceOverview",
                                     "when": "interfaceOverviewVisible" },
{ "key": "down",                  "command": "workbench.action.interactivePlayground.arrowDown",
                                     "when": "interactivePlaygroundFocus && !editorTextFocus" },
{ "key": "up",                    "command": "workbench.action.interactivePlayground.arrowUp",
                                     "when": "interactivePlaygroundFocus && !editorTextFocus" },
{ "key": "pagedown",              "command": "workbench.action.interactivePlayground.pageDown",
                                     "when": "interactivePlaygroundFocus && !editorTextFocus" },
{ "key": "pageup",                "command": "workbench.action.interactivePlayground.pageUp",
                                     "when": "interactivePlaygroundFocus && !editorTextFocus" },
{ "key": "cmd+k enter",           "command": "workbench.action.keepEditor" },
{ "key": "cmd+k cmd+r",           "command": "workbench.action.keybindingsReference" },
{ "key": "cmd+9",                 "command": "workbench.action.lastEditorInGroup" },
{ "key": "ctrl+0",                "command": "workbench.action.lastEditorInGroup" },
{ "key": "cmd+k down",            "command": "workbench.action.moveActiveEditorGroupDown" },
{ "key": "cmd+k left",            "command": "workbench.action.moveActiveEditorGroupLeft" },
{ "key": "cmd+k right",           "command": "workbench.action.moveActiveEditorGroupRight" },
{ "key": "cmd+k up",              "command": "workbench.action.moveActiveEditorGroupUp" },
{ "key": "cmd+k shift+cmd+left",  "command": "workbench.action.moveEditorLeftInGroup" },
{ "key": "cmd+k shift+cmd+right", "command": "workbench.action.moveEditorRightInGroup" },
{ "key": "ctrl+cmd+1",            "command": "workbench.action.moveEditorToFirstGroup" },
{ "key": "ctrl+cmd+9",            "command": "workbench.action.moveEditorToLastGroup" },
{ "key": "ctrl+cmd+right",        "command": "workbench.action.moveEditorToNextGroup" },
{ "key": "ctrl+cmd+left",         "command": "workbench.action.moveEditorToPreviousGroup" },
{ "key": "ctrl+-",                "command": "workbench.action.navigateBack" },
{ "key": "ctrl+shift+-",          "command": "workbench.action.navigateForward" },
{ "key": "cmd+k cmd+q",           "command": "workbench.action.navigateToLastEditLocation" },
{ "key": "shift+cmd+n",           "command": "workbench.action.newWindow" },
{ "key": "shift+cmd+]",           "command": "workbench.action.nextEditor" },
{ "key": "alt+cmd+right",         "command": "workbench.action.nextEditor" },
{ "key": "ctrl+1",                "command": "workbench.action.openEditorAtIndex1" },
{ "key": "ctrl+2",                "command": "workbench.action.openEditorAtIndex2" },
{ "key": "ctrl+3",                "command": "workbench.action.openEditorAtIndex3" },
{ "key": "ctrl+4",                "command": "workbench.action.openEditorAtIndex4" },
{ "key": "ctrl+5",                "command": "workbench.action.openEditorAtIndex5" },
{ "key": "ctrl+6",                "command": "workbench.action.openEditorAtIndex6" },
{ "key": "ctrl+7",                "command": "workbench.action.openEditorAtIndex7" },
{ "key": "ctrl+8",                "command": "workbench.action.openEditorAtIndex8" },
{ "key": "ctrl+9",                "command": "workbench.action.openEditorAtIndex9" },
{ "key": "cmd+k cmd+s",           "command": "workbench.action.openGlobalKeybindings" },
{ "key": "ctrl+tab",              "command": "workbench.action.openNextRecentlyUsedEditorInGroup" },
{ "key": "ctrl+shift+tab",        "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup" },
{ "key": "ctrl+r",                "command": "workbench.action.openRecent" },
{ "key": "cmd+,",                 "command": "workbench.action.openSettings" },
{ "key": "shift+cmd+u",           "command": "workbench.action.output.toggleOutput" },
{ "key": "shift+cmd+[",           "command": "workbench.action.previousEditor" },
{ "key": "alt+cmd+left",          "command": "workbench.action.previousEditor" },
{ "key": "cmd+p",                 "command": "workbench.action.quickOpen" },
{ "key": "ctrl+q",                "command": "workbench.action.quickOpenView" },
{ "key": "cmd+q",                 "command": "workbench.action.quit" },
{ "key": "shift+cmd+t",           "command": "workbench.action.reopenClosedEditor" },
{ "key": "shift+cmd+h",           "command": "workbench.action.replaceInFiles" },
{ "key": "shift+cmd+j",           "command": "workbench.action.search.toggleQueryDetails",
                                     "when": "searchViewletVisible" },
{ "key": "cmd+k cmd+t",           "command": "workbench.action.selectTheme" },
{ "key": "alt+cmd+tab",           "command": "workbench.action.showAllEditors" },
{ "key": "cmd+t",                 "command": "workbench.action.showAllSymbols" },
{ "key": "f1",                    "command": "workbench.action.showCommands" },
{ "key": "shift+cmd+p",           "command": "workbench.action.showCommands" },
{ "key": "cmd+\\",                "command": "workbench.action.splitEditor" },
{ "key": "cmd+k cmd+\\",          "command": "workbench.action.splitEditorOrthogonal" },
{ "key": "ctrl+w",                "command": "workbench.action.switchWindow" },
{ "key": "shift+cmd+b",           "command": "workbench.action.tasks.build" },
{ "key": "escape",                "command": "workbench.action.terminal.clearSelection",
                                     "when": "terminalFocus && terminalTextSelected && !terminalFindWidgetVisible" },
{ "key": "cmd+c",                 "command": "workbench.action.terminal.copySelection",
                                     "when": "terminalFocus && terminalTextSelected" },
{ "key": "cmd+backspace",         "command": "workbench.action.terminal.deleteToLineStart",
                                     "when": "terminalFocus" },
{ "key": "alt+backspace",         "command": "workbench.action.terminal.deleteWordLeft",
                                     "when": "terminalFocus" },
{ "key": "alt+delete",            "command": "workbench.action.terminal.deleteWordRight",
                                     "when": "terminalFocus" },
{ "key": "f3",                    "command": "workbench.action.terminal.findNext",
                                     "when": "terminalFindWidgetFocused" },
{ "key": "cmd+g",                 "command": "workbench.action.terminal.findNext",
                                     "when": "terminalFindWidgetFocused" },
{ "key": "f3",                    "command": "workbench.action.terminal.findNextTerminalFocus",
                                     "when": "terminalFocus" },
{ "key": "cmd+g",                 "command": "workbench.action.terminal.findNextTerminalFocus",
                                     "when": "terminalFocus" },
{ "key": "shift+f3",              "command": "workbench.action.terminal.findPrevious",
                                     "when": "terminalFindWidgetFocused" },
{ "key": "shift+cmd+g",           "command": "workbench.action.terminal.findPrevious",
                                     "when": "terminalFindWidgetFocused" },
{ "key": "shift+f3",              "command": "workbench.action.terminal.findPreviousTerminalFocus",
                                     "when": "terminalFocus" },
{ "key": "shift+cmd+g",           "command": "workbench.action.terminal.findPreviousTerminalFocus",
                                     "when": "terminalFocus" },
{ "key": "cmd+f",                 "command": "workbench.action.terminal.focusFindWidget",
                                     "when": "terminalFocus" },
{ "key": "cmd+f",                 "command": "workbench.action.terminal.focusFindWidget",
                                     "when": "terminalFindWidgetFocused" },
{ "key": "alt+cmd+down",          "command": "workbench.action.terminal.focusNextPane",
                                     "when": "terminalFocus" },
{ "key": "alt+cmd+right",         "command": "workbench.action.terminal.focusNextPane",
                                     "when": "terminalFocus" },
{ "key": "alt+cmd+up",            "command": "workbench.action.terminal.focusPreviousPane",
                                     "when": "terminalFocus" },
{ "key": "alt+cmd+left",          "command": "workbench.action.terminal.focusPreviousPane",
                                     "when": "terminalFocus" },
{ "key": "shift+escape",          "command": "workbench.action.terminal.hideFindWidget",
                                     "when": "terminalFindWidgetVisible && terminalFocus" },
{ "key": "escape",                "command": "workbench.action.terminal.hideFindWidget",
                                     "when": "terminalFindWidgetVisible && terminalFocus" },
{ "key": "cmd+right",             "command": "workbench.action.terminal.moveToLineEnd",
                                     "when": "terminalFocus" },
{ "key": "cmd+left",              "command": "workbench.action.terminal.moveToLineStart",
                                     "when": "terminalFocus" },
{ "key": "ctrl+shift+`",          "command": "workbench.action.terminal.new" },
{ "key": "shift+cmd+c",           "command": "workbench.action.terminal.openNativeConsole",
                                     "when": "!terminalFocus" },
{ "key": "ctrl+cmd+down",         "command": "workbench.action.terminal.resizePaneDown",
                                     "when": "terminalFocus" },
{ "key": "ctrl+cmd+left",         "command": "workbench.action.terminal.resizePaneLeft",
                                     "when": "terminalFocus" },
{ "key": "ctrl+cmd+right",        "command": "workbench.action.terminal.resizePaneRight",
                                     "when": "terminalFocus" },
{ "key": "ctrl+cmd+up",           "command": "workbench.action.terminal.resizePaneUp",
                                     "when": "terminalFocus" },
{ "key": "alt+cmd+pagedown",      "command": "workbench.action.terminal.scrollDown",
                                     "when": "terminalFocus" },
{ "key": "pagedown",              "command": "workbench.action.terminal.scrollDownPage",
                                     "when": "terminalFocus" },
{ "key": "cmd+end",               "command": "workbench.action.terminal.scrollToBottom",
                                     "when": "terminalFocus" },
{ "key": "cmd+down",              "command": "workbench.action.terminal.scrollToNextCommand",
                                     "when": "terminalFocus" },
{ "key": "cmd+up",                "command": "workbench.action.terminal.scrollToPreviousCommand",
                                     "when": "terminalFocus" },
{ "key": "cmd+home",              "command": "workbench.action.terminal.scrollToTop",
                                     "when": "terminalFocus" },
{ "key": "alt+cmd+pageup",        "command": "workbench.action.terminal.scrollUp",
                                     "when": "terminalFocus" },
{ "key": "pageup",                "command": "workbench.action.terminal.scrollUpPage",
                                     "when": "terminalFocus" },
{ "key": "cmd+a",                 "command": "workbench.action.terminal.selectAll",
                                     "when": "terminalFocus" },
{ "key": "shift+cmd+down",        "command": "workbench.action.terminal.selectToNextCommand",
                                     "when": "terminalFocus" },
{ "key": "shift+cmd+up",          "command": "workbench.action.terminal.selectToPreviousCommand",
                                     "when": "terminalFocus" },
{ "key": "ctrl+shift+5",          "command": "workbench.action.terminal.split",
                                     "when": "terminalFocus" },
{ "key": "cmd+\\",                "command": "workbench.action.terminal.split",
                                     "when": "terminalFocus" },
{ "key": "alt+cmd+c",             "command": "workbench.action.terminal.toggleFindCaseSensitive",
                                     "when": "terminalFindWidgetFocused" },
{ "key": "alt+cmd+c",             "command": "workbench.action.terminal.toggleFindCaseSensitiveTerminalFocus",
                                     "when": "terminalFocus" },
{ "key": "alt+cmd+r",             "command": "workbench.action.terminal.toggleFindRegex",
                                     "when": "terminalFindWidgetFocused" },
{ "key": "alt+cmd+r",             "command": "workbench.action.terminal.toggleFindRegexTerminalFocus",
                                     "when": "terminalFocus" },
{ "key": "alt+cmd+w",             "command": "workbench.action.terminal.toggleFindWholeWord",
                                     "when": "terminalFindWidgetFocused" },
{ "key": "alt+cmd+w",             "command": "workbench.action.terminal.toggleFindWholeWordTerminalFocus",
                                     "when": "terminalFocus" },
{ "key": "ctrl+`",                "command": "workbench.action.terminal.toggleTerminal" },
{ "key": "alt+cmd+0",             "command": "workbench.action.toggleEditorGroupLayout" },
{ "key": "ctrl+cmd+f",            "command": "workbench.action.toggleFullScreen" },
{ "key": "cmd+j",                 "command": "workbench.action.togglePanel" },
{ "key": "cmd+b",                 "command": "workbench.action.toggleSidebarVisibility" },
{ "key": "ctrl+cmd+w",            "command": "workbench.action.toggleTabsVisibility" },
{ "key": "cmd+k z",               "command": "workbench.action.toggleZenMode" },
{ "key": "cmd+numpad_add",        "command": "workbench.action.zoomIn" },
{ "key": "shift+cmd+=",           "command": "workbench.action.zoomIn" },
{ "key": "cmd+=",                 "command": "workbench.action.zoomIn" },
{ "key": "cmd+numpad_subtract",   "command": "workbench.action.zoomOut" },
{ "key": "shift+cmd+-",           "command": "workbench.action.zoomOut" },
{ "key": "cmd+-",                 "command": "workbench.action.zoomOut" },
{ "key": "cmd+numpad0",           "command": "workbench.action.zoomReset" },
{ "key": "shift+cmd+m",           "command": "workbench.actions.view.problems" },
{ "key": "shift+cmd+y",           "command": "workbench.debug.action.toggleRepl" },
{ "key": "cmd+k cmd+m",           "command": "workbench.extensions.action.showRecommendedKeymapExtensions" },
{ "key": "cmd+k c",               "command": "workbench.files.action.compareWithClipboard" },
{ "key": "cmd+k d",               "command": "workbench.files.action.compareWithSaved" },
{ "key": "cmd+k e",               "command": "workbench.files.action.focusOpenEditorsView",
                                     "when": "workbench.explorer.openEditorsView.active" },
{ "key": "shift+cmd+d",           "command": "workbench.view.debug" },
{ "key": "shift+cmd+e",           "command": "workbench.view.explorer" },
{ "key": "shift+cmd+x",           "command": "workbench.view.extensions" },
{ "key": "ctrl+shift+g",          "command": "workbench.view.scm" },
{ "key": "shift+cmd+f",           "command": "workbench.view.search",
                                     "when": "!searchViewletVisible" },
{ "key": "escape",                "command": "breadcrumbs.selectEditor",
                                     "when": "breadcrumbsActive && breadcrumbsVisible" },
{ "key": "f11",                   "command": "workbench.action.debug.stepInto",
                                     "when": "inDebugMode" },
{ "key": "cmd+k",                 "command": "workbench.action.terminal.clear",
                                     "when": "terminalFocus" },
{ "key": "enter",                 "command": "debug.renameWatchExpression",
                                     "when": "watchExpressionsFocused" },
{ "key": "enter",                 "command": "debug.setVariable",
                                     "when": "variablesFocused" },
{ "key": "space",                 "command": "debug.toggleBreakpoint",
                                     "when": "breakpointsFocused && !inputFocus" },
{ "key": "cmd+backspace",         "command": "deleteFile",
                                     "when": "explorerViewletVisible && filesExplorerFocus && !config.files.enableTrash && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
{ "key": "alt+cmd+backspace",     "command": "deleteFile",
                                     "when": "config.files.enableTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
{ "key": "cmd+c",                 "command": "filesExplorer.copy",
                                     "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus" },
{ "key": "cmd+v",                 "command": "filesExplorer.paste",
                                     "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus" },
{ "key": "cmd+backspace",         "command": "moveFileToTrash",
                                     "when": "config.files.enableTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
{ "key": "enter",                 "command": "renameFile",
                                     "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus" },
{ "key": "shift+escape",          "command": "closeReferenceSearch",
                                     "when": "referenceSearchVisible && !config.editor.stablePeek" },
{ "key": "escape",                "command": "closeReferenceSearch",
                                     "when": "referenceSearchVisible && !config.editor.stablePeek" },
{ "key": "f4",                    "command": "goToNextReference",
                                     "when": "referenceSearchVisible" },
{ "key": "shift+f4",              "command": "goToPreviousReference",
                                     "when": "referenceSearchVisible" },
{ "key": "escape",                "command": "notifications.hideList",
                                     "when": "notificationCenterVisible" },
{ "key": "escape",                "command": "notifications.hideToasts",
                                     "when": "notificationToastsVisible" },
{ "key": "ctrl+-",                "command": "workbench.action.quickInputBack",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+tab",              "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
                                     "when": "inEditorsPicker && inQuickOpen" },
{ "key": "cmd+p",                 "command": "workbench.action.quickOpenNavigateNextInFilePicker",
                                     "when": "inFilesPicker && inQuickOpen" },
{ "key": "ctrl+r",                "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
                                     "when": "inQuickOpen && inRecentFilesPicker" },
{ "key": "ctrl+q",                "command": "workbench.action.quickOpenNavigateNextInViewPicker",
                                     "when": "inQuickOpen && inViewsPicker" },
{ "key": "ctrl+shift+tab",        "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
                                     "when": "inEditorsPicker && inQuickOpen" },
{ "key": "shift+cmd+p",           "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
                                     "when": "inFilesPicker && inQuickOpen" },
{ "key": "ctrl+shift+r",          "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
                                     "when": "inQuickOpen && inRecentFilesPicker" },
{ "key": "ctrl+shift+q",          "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
                                     "when": "inQuickOpen && inViewsPicker" },
{ "key": "ctrl+n",                "command": "workbench.action.quickOpenSelectNext",
                                     "when": "inQuickOpen" },
{ "key": "ctrl+p",                "command": "workbench.action.quickOpenSelectPrevious",
                                     "when": "inQuickOpen" },
{ "key": "cmd+f4",                "command": "extension.node-debug.pickLoadedScript",
                                     "when": "debugType == 'node'" },
{ "key": "cmd+f4",                "command": "extension.node-debug.pickLoadedScript",
                                     "when": "debugType == 'node2'" },
{ "key": "shift+cmd+v",           "command": "markdown.showPreview",
                                     "when": "editorLangId == 'markdown'" },
{ "key": "shift+alt+f12",         "command": "references-view.find",
                                     "when": "editorHasReferenceProvider" },
{ "key": "f10",                   "command": "extension.node-debug.startWithStopOnEntry",
                                     "when": "!inDebugMode && debugConfigurationType == 'node'" },
{ "key": "cmd+k v",               "command": "markdown.showPreviewToSide",
                                     "when": "editorLangId == 'markdown'" },
{ "key": "f4",                    "command": "references-view.next",
                                     "when": "reference-list.hasResult" },
{ "key": "f11",                   "command": "extension.node-debug.startWithStopOnEntry",
                                     "when": "!inDebugMode && debugConfigurationType == 'node'" },
{ "key": "shift+f4",              "command": "references-view.prev",
                                     "when": "reference-list.hasResult" },
{ "key": "alt+cmd+k",             "command": "bookmarks.toggle",
                                     "when": "editorTextFocus" },
{ "key": "cmd+f4",                "command": "extension.node-debug.pickLoadedScript",
                                     "when": "debugType == 'chrome'" },
{ "key": "ctrl+alt+h ctrl+alt+h", "command": "psi-header.insertFileHeader" },
{ "key": "ctrl+shift+cmd+f",      "command": "workbench.action.toggleZenMode" },
{ "key": "alt+cmd+l",             "command": "bookmarks.jumpToNext",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+alt+c ctrl+alt+c", "command": "psi-header.insertChangeLog" },
{ "key": "cmd+w",                 "command": "workbench.action.closeActiveEditor" },
{ "key": "alt+cmd+j",             "command": "bookmarks.jumpToPrevious",
                                     "when": "editorTextFocus" },
{ "key": "shift+cmd+[",           "command": "workbench.action.previousEditor" },
{ "key": "shift+alt+k",           "command": "bookmarks.shrinkSelection",
                                     "when": "editorTextFocus" },
{ "key": "shift+cmd+]",           "command": "workbench.action.nextEditor" },
{ "key": "shift+alt+l",           "command": "bookmarks.expandSelectionToNext",
                                     "when": "editorTextFocus" },
{ "key": "alt+cmd+s",             "command": "workbench.action.files.saveAll" },
{ "key": "shift+alt+j",           "command": "bookmarks.expandSelectionToPrevious",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+b",           "command": "workbench.action.toggleSidebarVisibility" },
{ "key": "ctrl+alt+up",           "command": "scrollLineUp",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+alt+down",         "command": "scrollLineDown",
                                     "when": "editorTextFocus" },
{ "key": "cmd+t",                 "command": "workbench.action.quickOpen" },
{ "key": "cmd+r",                 "command": "workbench.action.gotoSymbol" },
{ "key": "cmd+r",                 "command": "workbench.action.gotoSymbol" },
{ "key": "alt+cmd+down",          "command": "editor.action.goToDeclaration" },
{ "key": "ctrl+-",                "command": "workbench.action.navigateBack" },
{ "key": "ctrl+shift+-",          "command": "workbench.action.navigateForward" },
{ "key": "cmd+g",                 "command": "editor.action.nextMatchFindAction",
                                     "when": "editorTextFocus" },
{ "key": "f4",                    "command": "editor.action.nextMatchFindAction",
                                     "when": "editorTextFocus" },
{ "key": "shift+f4",              "command": "editor.action.previousMatchFindAction",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+cmd+up",           "command": "editor.action.moveLinesUpAction",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+cmd+down",         "command": "editor.action.moveLinesDownAction",
                                     "when": "editorTextFocus" },
{ "key": "alt+cmd+/",             "command": "editor.action.commentLine",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+up",          "command": "workbench.action.splitEditor" },
{ "key": "alt+cmd+2",             "command": "workbench.action.splitEditor" },
{ "key": "cmd+k cmd+down",        "command": "workbench.action.closeActiveEditor" },
{ "key": "alt+cmd+[",             "command": "editor.fold",
                                     "when": "editorFocus" },
{ "key": "alt+cmd+]",             "command": "editor.unfold",
                                     "when": "editorFocus" },
{ "key": "cmd+k cmd+0",           "command": "editor.unfoldAll",
                                     "when": "editorFocus" },
{ "key": "alt+f12",               "command": "editor.action.showContextMenu",
                                     "when": "editorTextFocus" },
{ "key": "shift+cmd+d",           "command": "editor.action.copyLinesDownAction",
                                     "when": "editorFocus" },
{ "key": "cmd+l",                 "command": "expandLineSelection",
                                     "when": "editorFocus" },
{ "key": "cmd+d",                 "command": "editor.action.addSelectionToNextFindMatch",
                                     "when": "editorFocus" },
{ "key": "ctrl+m",                "command": "editor.action.jumpToBracket",
                                     "when": "editorFocus" },
{ "key": "alt+cmd+/",             "command": "editor.action.blockComment",
                                     "when": "editorFocus" },
{ "key": "alt+cmd+f",             "command": "editor.action.startFindReplaceAction" },
{ "key": "ctrl+shift+k",          "command": "editor.action.deleteLines",
                                     "when": "editorFocus" },
{ "key": "ctrl+shift+up",         "command": "editor.action.insertCursorAbove",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+down",       "command": "editor.action.insertCursorBelow",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+pageup",     "command": "cursorColumnSelectPageUp",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+pagedown",   "command": "cursorColumnSelectPageDown",
                                     "when": "editorTextFocus" },
{ "key": "shift+cmd+l",           "command": "editor.action.insertCursorAtEndOfEachLineSelected",
                                     "when": "editorTextFocus" },
{ "key": "cmd+1",                 "command": "workbench.action.openEditorAtIndex1" },
{ "key": "cmd+2",                 "command": "workbench.action.openEditorAtIndex2" },
{ "key": "cmd+3",                 "command": "workbench.action.openEditorAtIndex3" },
{ "key": "cmd+4",                 "command": "workbench.action.openEditorAtIndex4" },
{ "key": "cmd+5",                 "command": "workbench.action.openEditorAtIndex5" },
{ "key": "cmd+6",                 "command": "workbench.action.openEditorAtIndex6" },
{ "key": "cmd+7",                 "command": "workbench.action.openEditorAtIndex7" },
{ "key": "cmd+8",                 "command": "workbench.action.openEditorAtIndex8" },
{ "key": "cmd+9",                 "command": "workbench.action.openEditorAtIndex9" },
{ "key": "ctrl+cmd+g",            "command": "editor.action.selectHighlights",
                                     "when": "editorFocus" },
{ "key": "shift+cmd+r",           "command": "workbench.action.showAllSymbols" },
{ "key": "ctrl+alt+left",         "command": "cursorWordStartLeft",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+alt+right",        "command": "cursorWordEndRight",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+alt+left",   "command": "cursorWordStartLeftSelect",
                                     "when": "editorTextFocus" },
{ "key": "ctrl+shift+alt+right",  "command": "cursorWordEndRightSelect",
                                     "when": "editorTextFocus" },
{ "key": "cmd+j",                 "command": "editor.action.joinLines",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+u",           "command": "editor.action.transformToUppercase",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k cmd+l",           "command": "editor.action.transformToLowercase",
                                     "when": "editorTextFocus" },
{ "key": "cmd+k a",               "command": "workbench.action.showErrorsWarnings" },
{ "key": "cmd+k n",               "command": "editor.action.marker.next",
                                     "when": "editorFocus" },
{ "key": "cmd+k p",               "command": "editor.action.marker.prev",
                                     "when": "editorFocus" },
{ "key": "ctrl+1",                "command": "workbench.action.focusFirstEditorGroup",
                                     "when": "editorFocus" },
{ "key": "ctrl+2",                "command": "workbench.action.focusSecondEditorGroup",
                                     "when": "editorFocus" },
{ "key": "ctrl+3",                "command": "workbench.action.focusThirdEditorGroup",
                                     "when": "editorFocus" },
{ "key": "cmd+p",                 "command": "workbench.action.quickOpenPreviousEditor" },
{ "key": "cmd+k cmd+k",           "command": "deleteAllRight",
                                     "when": "editorTextFocus && !editorReadonly" },
{ "key": "shift+cmd+space",       "command": "editor.action.smartSelect.grow",
                                     "when": "editorTextFocus" }
]


// Here are other available commands: 
// - acceptSnippet
// - addRootFolder
// - bookmarks.clear
// - bookmarks.clearFromAllFiles
// - bookmarks.clearFromFile
// - bookmarks.deleteBookmark
// - bookmarks.jumpTo
// - bookmarks.list
// - bookmarks.listFromAllFiles
// - bookmarks.refresh
// - bookmarks.selectLines
// - bookmarks.toggleLabeled
// - bookmarks.whatsNew
// - bookmarksExplorer.focus
// - breadcrumbs.toggle
// - columnSelect
// - compareFiles
// - compareSelected
// - compositionEnd
// - compositionStart
// - createCursor
// - cursorWordEndLeft
// - cursorWordEndLeftSelect
// - cursorWordLeft
// - cursorWordLeftSelect
// - cursorWordPartStartLeft
// - cursorWordPartStartLeftSelect
// - cursorWordRight
// - cursorWordRightSelect
// - cursorWordStartRight
// - cursorWordStartRightSelect
// - cut
// - debug.addConfiguration
// - debug.enableOrDisableBreakpoint
// - debug.installAdditionalDebuggers
// - default:compositionEnd
// - default:compositionStart
// - default:cut
// - default:paste
// - default:redo
// - default:replacePreviousChar
// - default:type
// - default:undo
// - deleteWordEndLeft
// - deleteWordEndRight
// - deleteWordStartLeft
// - deleteWordStartRight
// - dev.stats.loader
// - editor.action.addCursorsToBottom
// - editor.action.addCursorsToTop
// - editor.action.addSelectionToPreviousFindMatch
// - editor.action.clearoutput
// - editor.action.clipboardCopyWithSyntaxHighlightingAction
// - editor.action.codeAction
// - editor.action.detectIndentation
// - editor.action.findReferences
// - editor.action.fontZoomIn
// - editor.action.fontZoomOut
// - editor.action.fontZoomReset
// - editor.action.format
// - editor.action.goToTypeDefinition
// - editor.action.indentUsingSpaces
// - editor.action.indentUsingTabs
// - editor.action.indentationToSpaces
// - editor.action.indentationToTabs
// - editor.action.insertSnippet
// - editor.action.inspectTMScopes
// - editor.action.moveCarretLeftAction
// - editor.action.moveCarretRightAction
// - editor.action.moveSelectionToPreviousFindMatch
// - editor.action.nextCommentThreadAction
// - editor.action.openDeclarationToTheSide
// - editor.action.openLink
// - editor.action.peekDeclaration
// - editor.action.peekTypeDefinition
// - editor.action.previewDeclaration
// - editor.action.reindentlines
// - editor.action.reindentselectedlines
// - editor.action.revealDeclaration
// - editor.action.selectToBracket
// - editor.action.showSnippets
// - editor.action.sortLinesAscending
// - editor.action.sortLinesDescending
// - editor.action.sourceAction
// - editor.action.toggleMinimap
// - editor.action.toggleRenderControlCharacter
// - editor.action.toggleRenderWhitespace
// - editor.action.transpose
// - editor.action.wordHighlight.trigger
// - editor.debug.action.conditionalBreakpoint
// - editor.debug.action.goToNextBreakpoint
// - editor.debug.action.goToPreviousBreakpoint
// - editor.debug.action.runToCursor
// - editor.debug.action.selectionToRepl
// - editor.debug.action.selectionToWatch
// - editor.debug.action.toggleLogPoint
// - editor.emmet.action.balanceIn
// - editor.emmet.action.balanceOut
// - editor.emmet.action.decrementNumberByOne
// - editor.emmet.action.decrementNumberByOneTenth
// - editor.emmet.action.decrementNumberByTen
// - editor.emmet.action.evaluateMathExpression
// - editor.emmet.action.incrementNumberByOne
// - editor.emmet.action.incrementNumberByOneTenth
// - editor.emmet.action.incrementNumberByTen
// - editor.emmet.action.matchTag
// - editor.emmet.action.mergeLines
// - editor.emmet.action.nextEditPoint
// - editor.emmet.action.prevEditPoint
// - editor.emmet.action.reflectCSSValue
// - editor.emmet.action.removeTag
// - editor.emmet.action.selectNextItem
// - editor.emmet.action.selectPrevItem
// - editor.emmet.action.splitJoinTag
// - editor.emmet.action.toggleComment
// - editor.emmet.action.updateImageSize
// - editor.emmet.action.updateTag
// - editor.emmet.action.wrapIndividualLinesWithAbbreviation
// - editor.emmet.action.wrapWithAbbreviation
// - emmet.expandAbbreviation
// - eslint.applyAllFixes
// - eslint.applyAutoFix
// - eslint.applyDisableFile
// - eslint.applyDisableLine
// - eslint.applySameFixes
// - eslint.applySingleFix
// - eslint.createConfig
// - eslint.disable
// - eslint.enable
// - eslint.executeAutofix
// - eslint.openRuleDoc
// - eslint.showOutputChannel
// - explorer.newFile
// - explorer.newFolder
// - extension.chrome-debug.toggleSkippingFile
// - extension.chrome-debug.toggleSmartStep
// - extension.formatwxml
// - extension.importFromSublime
// - extension.node-debug.attachNodeProcess
// - extension.node-debug.toggleAutoAttach
// - extension.node-debug.toggleSkippingFile
// - extension.node-debug2.toggleSkippingFile
// - extension.open
// - extension.partialDiff.diffSelectionWithClipboard
// - extension.partialDiff.diffVisibleEditors
// - extension.partialDiff.markSection1
// - extension.partialDiff.markSection2AndTakeDiff
// - extension.partialDiff.togglePreComparisonTextNormalizationRules
// - extensions.builtInBasicsExtensionsList.focus
// - extensions.builtInExtensionsList.focus
// - extensions.builtInThemesExtensionsList.focus
// - extensions.disabledExtensionList.focus
// - extensions.enabledExtensionList.focus
// - extensions.listView.focus
// - extensions.otherrecommendedList.focus
// - extensions.popularExtensionsList.focus
// - extensions.recommendedList.focus
// - extensions.workspaceRecommendedList.focus
// - filesExplorer.findInFolder
// - filesExplorer.findInWorkspace
// - git._syncAll
// - git.branch
// - git.checkout
// - git.clean
// - git.cleanAll
// - git.clone
// - git.close
// - git.commit
// - git.commitAll
// - git.commitAllAmend
// - git.commitAllSigned
// - git.commitEmpty
// - git.commitStaged
// - git.commitStagedAmend
// - git.commitStagedSigned
// - git.commitWithInput
// - git.createTag
// - git.deleteBranch
// - git.fetch
// - git.fetchAll
// - git.fetchPrune
// - git.ignore
// - git.init
// - git.merge
// - git.openChange
// - git.openFile
// - git.openFile2
// - git.openHEADFile
// - git.openRepository
// - git.openResource
// - git.publish
// - git.pull
// - git.pullFrom
// - git.pullRebase
// - git.push
// - git.pushForce
// - git.pushTo
// - git.pushToForce
// - git.pushWithTags
// - git.pushWithTagsForce
// - git.refresh
// - git.renameBranch
// - git.restoreCommitTemplate
// - git.revertChange
// - git.revertSelectedRanges
// - git.showOutput
// - git.stage
// - git.stageAll
// - git.stageChange
// - git.stageSelectedRanges
// - git.stash
// - git.stashApply
// - git.stashApplyLatest
// - git.stashIncludeUntracked
// - git.stashPop
// - git.stashPopLatest
// - git.sync
// - git.syncRebase
// - git.undoCommit
// - git.unstage
// - git.unstageAll
// - git.unstageSelectedRanges
// - javascript.goToProjectConfig
// - javascript.reloadProjects
// - js.projectStatus.command
// - keybindings.editor.copyCommandKeybindingEntry
// - keybindings.editor.resetKeybinding
// - keybindings.editor.showConflicts
// - keybindings.editor.showDefaultKeybindings
// - keybindings.editor.showUserKeybindings
// - lastCursorLineSelect
// - lastCursorLineSelectDrag
// - lastCursorWordSelect
// - layoutEditorGroups
// - list.focusFirstChild
// - list.focusLastChild
// - markdown.preview.refresh
// - markdown.preview.toggleLock
// - markdown.showLockedPreviewToSide
// - markdown.showPreviewSecuritySelector
// - markdown.showSource
// - merge-conflict.accept.all-both
// - merge-conflict.accept.all-current
// - merge-conflict.accept.all-incoming
// - merge-conflict.accept.both
// - merge-conflict.accept.current
// - merge-conflict.accept.incoming
// - merge-conflict.accept.selection
// - merge-conflict.compare
// - merge-conflict.next
// - merge-conflict.previous
// - notifications.clearAll
// - notifications.focusToasts
// - notifications.showList
// - notifications.toggleList
// - npm.debugScript
// - npm.debugScriptFromHover
// - npm.focus
// - npm.openScript
// - npm.refresh
// - npm.runInstall
// - npm.runScript
// - npm.runScriptFromHover
// - npm.runSelectedScript
// - openInTerminal
// - outline.focus
// - paste
// - php.untrustValidationExecutable
// - problems.action.copyMessage
// - problems.action.copyRelatedInformationMessage
// - references-view.clear
// - references-view.copy
// - references-view.copyAll
// - references-view.copyPath
// - references-view.refresh
// - references-view.remove
// - references-view.tree.focus
// - removeRootFolder
// - repl.action.copyAll
// - replacePreviousChar
// - revealInExplorer
// - saveAll
// - search.action.clearHistory
// - search.action.clearSearchResults
// - search.action.collapseSearchResults
// - search.action.copyAll
// - search.action.focusSearchList
// - search.action.refreshSearchResults
// - search.action.toggleSearchViewPosition
// - selectAll
// - selectFirstSuggestion
// - selectForCompare
// - selectLastSuggestion
// - setContext
// - setSelection
// - settings.filterByModified
// - settings.filterByOnline
// - settings.switchToJSON
// - toggle.diff.ignoreTrimWhitespace
// - toggle.diff.renderSideBySide
// - toggleEscapeSequenceLogging
// - tslint.createConfig
// - tslint.fixAllProblems
// - tslint.showOutputChannel
// - type
// - typescript.goToProjectConfig
// - typescript.openTsServerLog
// - typescript.reloadProjects
// - typescript.restartTsServer
// - typescript.selectTypeScriptVersion
// - update.showCurrentReleaseNotes
// - workbench.action.acceptSelectedQuickOpenItem
// - workbench.action.addRootFolder
// - workbench.action.appPerf
// - workbench.action.clearCommandHistory
// - workbench.action.clearEditorHistory
// - workbench.action.clearRecentFiles
// - workbench.action.closeEditorInAllGroups
// - workbench.action.closeEditorsAndGroup
// - workbench.action.closeEditorsInOtherGroups
// - workbench.action.closeEditorsToTheLeft
// - workbench.action.closeEditorsToTheRight
// - workbench.action.closePanel
// - workbench.action.configureLanguageBasedSettings
// - workbench.action.configureLocale
// - workbench.action.debug.configure
// - workbench.action.debug.disconnect
// - workbench.action.debug.selectandstart
// - workbench.action.debug.terminateThread
// - workbench.action.decreaseViewSize
// - workbench.action.duplicateWorkspaceInNewWindow
// - workbench.action.editor.changeEOL
// - workbench.action.editor.changeEncoding
// - workbench.action.editorLayoutSingle
// - workbench.action.editorLayoutThreeColumns
// - workbench.action.editorLayoutThreeRows
// - workbench.action.editorLayoutTwoByTwoGrid
// - workbench.action.editorLayoutTwoColumns
// - workbench.action.editorLayoutTwoColumnsBottom
// - workbench.action.editorLayoutTwoRows
// - workbench.action.editorLayoutTwoRowsRight
// - workbench.action.evenEditorWidths
// - workbench.action.files.openFileFolderInNewWindow
// - workbench.action.files.openFileInNewWindow
// - workbench.action.files.openFolderInNewWindow
// - workbench.action.files.revert
// - workbench.action.files.saveFiles
// - workbench.action.firstEditorInGroup
// - workbench.action.focusActiveEditorGroup
// - workbench.action.focusLastEditorGroup
// - workbench.action.focusNextGroup
// - workbench.action.focusPanel
// - workbench.action.focusPreviousGroup
// - workbench.action.focusQuickOpen
// - workbench.action.generateColorTheme
// - workbench.action.increaseViewSize
// - workbench.action.inspectContextKeys
// - workbench.action.inspectKeyMappings
// - workbench.action.installCommandLine
// - workbench.action.joinAllGroups
// - workbench.action.joinTwoGroups
// - workbench.action.logStorage
// - workbench.action.maximizeEditor
// - workbench.action.minimizeOtherEditors
// - workbench.action.moveEditorToAboveGroup
// - workbench.action.moveEditorToBelowGroup
// - workbench.action.moveEditorToLeftGroup
// - workbench.action.moveEditorToRightGroup
// - workbench.action.navigateDown
// - workbench.action.navigateEditorGroups
// - workbench.action.navigateLast
// - workbench.action.navigateLeft
// - workbench.action.navigateRight
// - workbench.action.navigateUp
// - workbench.action.newGroupAbove
// - workbench.action.newGroupBelow
// - workbench.action.newGroupLeft
// - workbench.action.newGroupRight
// - workbench.action.nextEditorInGroup
// - workbench.action.nextPanelView
// - workbench.action.nextSideBarView
// - workbench.action.openActiveLogOutputFile
// - workbench.action.openDefaultKeybindingsFile
// - workbench.action.openDocumentationUrl
// - workbench.action.openEditorAtIndex
// - workbench.action.openFolderSettings
// - workbench.action.openGlobalKeybindingsFile
// - workbench.action.openGlobalSettings
// - workbench.action.openIntroductoryVideosUrl
// - workbench.action.openIssueReporter
// - workbench.action.openLicenseUrl
// - workbench.action.openLogFile
// - workbench.action.openLogsFolder
// - workbench.action.openNextRecentlyUsedEditor
// - workbench.action.openPreviousEditorFromHistory
// - workbench.action.openPreviousRecentlyUsedEditor
// - workbench.action.openPrivacyStatementUrl
// - workbench.action.openProcessExplorer
// - workbench.action.openRawDefaultSettings
// - workbench.action.openRequestFeatureUrl
// - workbench.action.openSettings2
// - workbench.action.openSettingsJson
// - workbench.action.openSnippets
// - workbench.action.openTipsAndTricksUrl
// - workbench.action.openTwitterUrl
// - workbench.action.openView
// - workbench.action.openWorkspace
// - workbench.action.openWorkspaceConfigFile
// - workbench.action.openWorkspaceInNewWindow
// - workbench.action.openWorkspaceSettings
// - workbench.action.previousEditorInGroup
// - workbench.action.previousPanelView
// - workbench.action.previousSideBarView
// - workbench.action.problems.focus
// - workbench.action.quickOpenNavigateNext
// - workbench.action.quickOpenNavigateNextInTerminalPicker
// - workbench.action.quickOpenNavigatePrevious
// - workbench.action.quickOpenNavigatePreviousInTerminalPicker
// - workbench.action.quickOpenRecent
// - workbench.action.quickOpenTerm
// - workbench.action.quickPickManyToggle
// - workbench.action.quickSwitchWindow
// - workbench.action.reloadWindow
// - workbench.action.reloadWindowWithExtensionsDisabled
// - workbench.action.removeFromEditorHistory
// - workbench.action.removeRootFolder
// - workbench.action.reportPerformanceIssueUsingReporter
// - workbench.action.revertAndCloseActiveEditor
// - workbench.action.saveWorkspaceAs
// - workbench.action.selectIconTheme
// - workbench.action.setLogLevel
// - workbench.action.showAboutDialog
// - workbench.action.showEditorsInActiveGroup
// - workbench.action.showEditorsInGroup
// - workbench.action.showEmmetCommands
// - workbench.action.showInteractivePlayground
// - workbench.action.showInterfaceOverview
// - workbench.action.showLogs
// - workbench.action.showRuntimeExtensions
// - workbench.action.showWelcomePage
// - workbench.action.splitEditorDown
// - workbench.action.splitEditorLeft
// - workbench.action.splitEditorRight
// - workbench.action.splitEditorUp
// - workbench.action.tasks.allowAutomaticRunning
// - workbench.action.tasks.configureDefaultBuildTask
// - workbench.action.tasks.configureDefaultTestTask
// - workbench.action.tasks.configureTaskRunner
// - workbench.action.tasks.disallowAutomaticRunning
// - workbench.action.tasks.reRunTask
// - workbench.action.tasks.restartTask
// - workbench.action.tasks.runTask
// - workbench.action.tasks.showLog
// - workbench.action.tasks.showTasks
// - workbench.action.tasks.terminate
// - workbench.action.tasks.test
// - workbench.action.terminal.allowWorkspaceShell
// - workbench.action.terminal.disallowWorkspaceShell
// - workbench.action.terminal.focus
// - workbench.action.terminal.focusAtIndex1
// - workbench.action.terminal.focusAtIndex2
// - workbench.action.terminal.focusAtIndex3
// - workbench.action.terminal.focusAtIndex4
// - workbench.action.terminal.focusAtIndex5
// - workbench.action.terminal.focusAtIndex6
// - workbench.action.terminal.focusAtIndex7
// - workbench.action.terminal.focusAtIndex8
// - workbench.action.terminal.focusAtIndex9
// - workbench.action.terminal.focusNext
// - workbench.action.terminal.focusPrevious
// - workbench.action.terminal.kill
// - workbench.action.terminal.newInActiveWorkspace
// - workbench.action.terminal.paste
// - workbench.action.terminal.rename
// - workbench.action.terminal.runActiveFile
// - workbench.action.terminal.runSelectedText
// - workbench.action.terminal.selectToNextLine
// - workbench.action.terminal.selectToPreviousLine
// - workbench.action.terminal.sendSequence
// - workbench.action.terminal.splitInActiveWorkspace
// - workbench.action.toggleActivityBarVisibility
// - workbench.action.toggleAutoSave
// - workbench.action.toggleCenteredLayout
// - workbench.action.toggleDevTools
// - workbench.action.toggleMaximizedPanel
// - workbench.action.toggleMultiCursorModifier
// - workbench.action.togglePanelPosition
// - workbench.action.toggleSharedProcess
// - workbench.action.toggleSidebarPosition
// - workbench.action.toggleStatusbarVisibility
// - workbench.action.uninstallCommandLine
// - workbench.action.url.openUrl
// - workbench.action.webview.openDeveloperTools
// - workbench.action.webview.reloadWebviewAction
// - workbench.debug.action.focusBreakpointsView
// - workbench.debug.action.focusCallStackView
// - workbench.debug.action.focusRepl
// - workbench.debug.action.focusVariablesView
// - workbench.debug.action.focusWatchView
// - workbench.debug.loadedScriptsView.focus
// - workbench.debug.panel.action.clearReplAction
// - workbench.debug.viewlet.action.addFunctionBreakpointAction
// - workbench.debug.viewlet.action.disableAllBreakpoints
// - workbench.debug.viewlet.action.enableAllBreakpoints
// - workbench.debug.viewlet.action.reapplyBreakpointsAction
// - workbench.debug.viewlet.action.removeAllBreakpoints
// - workbench.explorer.fileView.focus
// - workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations
// - workbench.extensions.action.addToWorkspaceFolderRecommendations
// - workbench.extensions.action.addToWorkspaceIgnoredRecommendations
// - workbench.extensions.action.addToWorkspaceRecommendations
// - workbench.extensions.action.checkForUpdates
// - workbench.extensions.action.configureWorkspaceFolderRecommendedExtensions
// - workbench.extensions.action.configureWorkspaceRecommendedExtensions
// - workbench.extensions.action.debugExtensionHost
// - workbench.extensions.action.disableAll
// - workbench.extensions.action.disableAllWorkspace
// - workbench.extensions.action.disableAutoUpdate
// - workbench.extensions.action.enableAll
// - workbench.extensions.action.enableAllWorkspace
// - workbench.extensions.action.enableAutoUpdate
// - workbench.extensions.action.extensionHostProfile
// - workbench.extensions.action.install.specificVersion
// - workbench.extensions.action.installExtensions
// - workbench.extensions.action.installVSIX
// - workbench.extensions.action.listBuiltInExtensions
// - workbench.extensions.action.listOutdatedExtensions
// - workbench.extensions.action.openExtensionsFolder
// - workbench.extensions.action.reinstall
// - workbench.extensions.action.saveExtensionHostProfile
// - workbench.extensions.action.showAzureExtensions
// - workbench.extensions.action.showDisabledExtensions
// - workbench.extensions.action.showEnabledExtensions
// - workbench.extensions.action.showExtensionsForLanguage
// - workbench.extensions.action.showExtensionsWithIds
// - workbench.extensions.action.showInstalledExtensions
// - workbench.extensions.action.showLanguageExtensions
// - workbench.extensions.action.showPopularExtensions
// - workbench.extensions.action.showRecommendedExtensions
// - workbench.extensions.action.stopExtensionHostProfile
// - workbench.extensions.action.updateAllExtensions
// - workbench.files.action.acceptLocalChanges
// - workbench.files.action.collapseExplorerFolders
// - workbench.files.action.compareFileWith
// - workbench.files.action.focusFilesExplorer
// - workbench.files.action.refreshFilesExplorer
// - workbench.files.action.revertLocalChanges
// - workbench.files.action.saveAllInGroup
// - workbench.files.action.showActiveFileInExplorer
// - workbench.output.action.clearOutput
// - workbench.view.extension.bookmarks
// - workbench.view.extension.references-view
// - workbench.view.extension.test